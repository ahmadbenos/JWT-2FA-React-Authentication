{"version":3,"sources":["context/GlobalContext.js","components/login.js","components/Header.js","components/Register.js","components/Dashboard.js","components/ProtectedRoute.js","components/AuthedRoute.js","components/twoFactor.js","components/validation.js","App.js","index.js"],"names":["mainContext","createContext","useGlobalState","useContext","ContextProvider","children","useState","msg","status","registerData","setRegisterData","user","two_fa_Validated","loggedInUser","setLoggedInUser","isloading","setIsLoading","error","setError","success","setSuccess","globalState","changeCurrentUser","changeRegisterData","data","toggleLoading","editError","err","editSuccess","Provider","value","className","type","color","height","width","Login","userEmail","setUserEmail","userPassword","setUserPassword","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","email","password","then","res","json","dataRes","console","log","message","localStorage","setItem","token","secret","push","catch","finally","role","data-dismiss","aria-label","aria-hidden","htmlFor","id","aria-describedby","onChange","target","to","onClick","Header","href","Register","confirmedPassword","setConfirmedPassword","required","Dashboard","useEffect","getItem","authed","decoded","jwt","decode","complete","payload","style","fontSize","removeItem","ProtectedRoute","Component","component","rest","checkAuth","window","location","pathname","didAuth","dateNow","Date","exp","length","render","props","AuthedRoute","TwoFactor","userSecret","setUserSecret","pin","setPin","setErr","getSecret","a","tempSecret","verifySecret","userId","submission","verified","lineHeight","placeholder","min","Validation","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d68b67c.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst mainContext = createContext();\r\n\r\nexport const useGlobalState = () => {\r\n  return useContext(mainContext);\r\n};\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [registerData, setRegisterData] = useState({ msg: \"\", status: \"\" });\r\n  const [loggedInUser, setLoggedInUser] = useState({\r\n    user: \"\",\r\n    status: \"\",\r\n    two_fa_Validated: false,\r\n  });\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   console.log(\"test\");\r\n  //   const token = localStorage.getItem(\"myToken\");\r\n  //   if (token) {\r\n  //     const decoded = jwt.decode(token, { complete: true });\r\n  //     console.log(decoded.payload.exp);\r\n  //     let dateNow = new Date();\r\n  //     if (decoded.payload.exp * 1000 > dateNow) {\r\n  //       setLoggedInUser({\r\n  //         user: { email: decoded.payload.email, id: decoded.payload.id },\r\n  //         status: \"success\",\r\n  //       });\r\n  //       return setIsLoading(false);\r\n  //     }\r\n  //     localStorage.removeItem(\"myToken\");\r\n  //     setIsLoading(false);\r\n  //   } else {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // }, []);\r\n\r\n  const changeRegisterData = (data) => {\r\n    setRegisterData(data);\r\n  };\r\n\r\n  const changeCurrentUser = (user) => {\r\n    setLoggedInUser(user);\r\n  };\r\n\r\n  const toggleLoading = (status) => {\r\n    setIsLoading(status);\r\n  };\r\n\r\n  const editError = (err) => {\r\n    setError(err);\r\n  };\r\n\r\n  const editSuccess = (msg) => {\r\n    setSuccess(msg);\r\n  };\r\n\r\n  const globalState = {\r\n    registerData,\r\n    loggedInUser,\r\n    changeCurrentUser,\r\n    changeRegisterData,\r\n    toggleLoading,\r\n    error,\r\n    editError,\r\n    editSuccess,\r\n    success,\r\n  };\r\n\r\n  return (\r\n    <mainContext.Provider value={globalState}>\r\n      {isloading === true ? (\r\n        <div className=\"text-center mt-5\">\r\n          <Loader type=\"Puff\" color=\"black\" height={80} width={80} />\r\n        </div>\r\n      ) : (\r\n        children\r\n      )}\r\n    </mainContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\n\r\nconst Login = () => {\r\n  const {\r\n    registerData,\r\n    changeCurrentUser,\r\n    toggleLoading,\r\n    error,\r\n    editError,\r\n    success,\r\n    editSuccess,\r\n  } = useGlobalState();\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function loginUser(e) {\r\n    toggleLoading(true);\r\n    editSuccess(\"\");\r\n    changeCurrentUser({ user: \"\", status: \"\", two_fa_Validated: false });\r\n    e.preventDefault();\r\n    editError(\"\");\r\n    fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: userEmail, password: userPassword }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((dataRes) => {\r\n        console.log(dataRes);\r\n        if (dataRes.status === \"error\") {\r\n          editError(dataRes.message);\r\n        } else {\r\n          //! login works\r\n          localStorage.setItem(\"myToken\", dataRes.token);\r\n          localStorage.setItem(\"authed\", dataRes.message.secret);\r\n          changeCurrentUser({\r\n            user: dataRes.message,\r\n            status: dataRes.status,\r\n            two_fa_Validated: false,\r\n          });\r\n          if (dataRes.message.secret) {\r\n            console.log(\"has secret\");\r\n            history.push(\"/user/validate\");\r\n          } else {\r\n            console.log(\"no secret\");\r\n            history.push(\"/dashboard\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        editError(\"Server error. Please try again\");\r\n      })\r\n      .finally(() => toggleLoading(false));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <form className=\"border p-4 w-75 m-auto\" onSubmit={loginUser}>\r\n        <div className=\"text-center mb-4\">\r\n          <h2>Login</h2>\r\n        </div>\r\n        {success ? (\r\n          <div\r\n            className=\"alert alert-success alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {success}\r\n          </div>\r\n        ) : null}\r\n        {error ? (\r\n          <div\r\n            className=\"alert alert-danger alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {error}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={(e) => setUserEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            onChange={(e) => setUserPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div className=\"text-center\">\r\n        <Link\r\n          to=\"/register\"\r\n          onClick={() => {\r\n            editError(\"\");\r\n            editSuccess(\"\");\r\n          }}\r\n        >\r\n          Don't have an account? Register Now!\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"display-3 text-center\">JWT+2FA</h1>\r\n      <div className=\"text-center\">\r\n        <small className=\"text-muted\">\r\n          This is a mini project that uses JWT(route protection) and 2FA(more\r\n          account security) authentication\r\n        </small>\r\n        <p>by Ahmad Tarabein</p>\r\n        <a href=\"https://github.com/ahmadbenos/JWT-2FA-React-Authentication\">\r\n          Github repo link\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nconst Register = () => {\r\n  const {\r\n    changeRegisterData,\r\n    toggleLoading,\r\n    editSuccess,\r\n    error,\r\n    editError,\r\n  } = useGlobalState();\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const submitInfo = (e) => {\r\n    editError(\"\");\r\n    toggleLoading(true);\r\n    e.preventDefault();\r\n    if (userPassword !== confirmedPassword) {\r\n      editError(\"Passwords don't match!\");\r\n      return toggleLoading(false);\r\n    }\r\n\r\n    fetch(\"/api/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: userEmail, password: userPassword }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((dataRes) => {\r\n        if (dataRes.status === \"error\") {\r\n          editError(dataRes.msg);\r\n          toggleLoading(false);\r\n        } else {\r\n          editSuccess(\"Registeration Successful!\");\r\n          history.push(\"/\");\r\n          changeRegisterData(dataRes);\r\n          toggleLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        editError(\"A server error occured. Please try again\");\r\n        toggleLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"border p-4 w-75 m-auto\" onSubmit={submitInfo}>\r\n        <div className=\"text-center mb-4\">\r\n          <h2>Register</h2>\r\n        </div>\r\n        {error ? (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        ) : null}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={(e) => setUserEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            onChange={(e) => setUserPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword2\">Confirm Password</label>\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword2\"\r\n            onChange={(e) => setConfirmedPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div className=\"text-center\">\r\n        <Link to=\"/\" onClick={() => editError(\"\")}>\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect } from \"react\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst Dashboard = () => {\r\n  const {\r\n    loggedInUser,\r\n    editSuccess,\r\n    success,\r\n    changeCurrentUser,\r\n  } = useGlobalState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser.user) {\r\n      console.log(\"exist\");\r\n    } else {\r\n      const token = localStorage.getItem(\"myToken\");\r\n      const authed = localStorage.getItem(\"authed\");\r\n      if (token) {\r\n        let decoded = jwt.decode(token, { complete: true });\r\n        changeCurrentUser({\r\n          user: {\r\n            id: decoded.payload.id,\r\n            email: decoded.payload.email,\r\n            secret: authed,\r\n          },\r\n          status: \"success\",\r\n          two_fa_Validated: authed ? true : false,\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  //! sign out function\r\n  function signOut() {\r\n    localStorage.removeItem(\"myToken\");\r\n    localStorage.removeItem(\"authed\");\r\n    localStorage.removeItem(\"didAuth\");\r\n    editSuccess(\"Signed out successfully!\");\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"text-center\">Dashboard</h2>\r\n        {/* //! 2FA notice */}\r\n        {!loggedInUser.user.secret ? (\r\n          <div\r\n            className=\"alert alert-warning alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <strong>\r\n              You have not activated 2FA yet!{\" \"}\r\n              <Link to=\"/dashboard/2fa\">\r\n                Please activate now for better account security\r\n              </Link>{\" \"}\r\n            </strong>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {success ? (\r\n          <div\r\n            className=\"alert alert-success alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {success}\r\n          </div>\r\n        ) : null}\r\n        {/* //! */}\r\n        <p className=\"text-center\" style={{ color: \"blue\", fontSize: 24 }}>\r\n          {loggedInUser.user.email}\r\n        </p>\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-outline-danger\" onClick={signOut}>\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { toggleLoading, editError, loggedInUser } = useGlobalState();\r\n\r\n  function checkAuth() {\r\n    toggleLoading(true);\r\n    console.log(window.location.pathname);\r\n    const token = localStorage.getItem(\"myToken\");\r\n    const authed = localStorage.getItem(\"authed\");\r\n    const didAuth = localStorage.getItem(\"didAuth\");\r\n\r\n    if (token) {\r\n      let decoded = jwt.decode(token, { complete: \"true\" });\r\n      let dateNow = new Date();\r\n      if (decoded.exp * 1000 < dateNow) {\r\n        localStorage.removeItem(\"myToken\");\r\n        localStorage.removeItem(\"authed\");\r\n        localStorage.removeItem(\"didAuth\");\r\n        editError(\"Please login to view this resource!\");\r\n        toggleLoading(false);\r\n        return \"error\";\r\n      } else {\r\n        if (\r\n          window.location.pathname === \"/dashboard\" &&\r\n          !didAuth &&\r\n          authed.length > 3\r\n        ) {\r\n          console.log(\"validate\");\r\n          toggleLoading(false);\r\n          return \"validate\";\r\n        } else if (\r\n          window.location.pathname === \"/user/validate\" &&\r\n          didAuth &&\r\n          authed.length > 3\r\n        ) {\r\n          console.log(\"dashboard\");\r\n          toggleLoading(false);\r\n          return \"dashboard\";\r\n        }\r\n        toggleLoading(false);\r\n        return \"success\";\r\n      }\r\n    } else {\r\n      toggleLoading(false);\r\n      editError(\"Please login to view this resource!\");\r\n      return \"error\";\r\n    }\r\n  }\r\n\r\n  function redirectCheck() {\r\n    if (checkAuth() === \"success\") {\r\n      return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      );\r\n    } else if (checkAuth() === \"validate\") {\r\n      return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            return <Redirect to=\"/user/validate\" />;\r\n          }}\r\n        />\r\n      );\r\n    } else if (checkAuth() === \"dashboard\") {\r\n      return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            return <Redirect to=\"/dashboard\" />;\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            return <Redirect to=\"/\" />;\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return redirectCheck();\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst AuthedRoute = ({ component: Component, ...rest }) => {\r\n  const {\r\n    toggleLoading,\r\n    changeCurrentUser,\r\n    editError,\r\n    editSuccess,\r\n    error,\r\n  } = useGlobalState();\r\n\r\n  function checkAuth() {\r\n    toggleLoading(true);\r\n    //editSuccess(\"\");\r\n    const token = localStorage.getItem(\"myToken\");\r\n    const authed = localStorage.getItem(\"authed\");\r\n    if (token) {\r\n      let decoded = jwt.decode(token, { complete: true });\r\n      let dateNow = new Date();\r\n      console.log(decoded);\r\n      //editError(\"\");\r\n      if (decoded.payload.exp * 1000 < dateNow) {\r\n        localStorage.removeItem(\"myToken\");\r\n        localStorage.removeItem(\"authed\");\r\n        localStorage.removeItem(\"didAuth\");\r\n        toggleLoading(false);\r\n        return \"error\";\r\n      } else {\r\n        changeCurrentUser({\r\n          user: { email: decoded.payload.email, id: decoded.payload.id },\r\n          status: \"success\",\r\n          two_fa_Validated: true,\r\n        });\r\n        toggleLoading(false);\r\n        return \"success\";\r\n      }\r\n    } else {\r\n      toggleLoading(false);\r\n      //editError(\"Please login to view this resource!\");\r\n      return \"error\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return checkAuth() === \"success\" ? (\r\n          <Redirect to=\"/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default AuthedRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst TwoFactor = () => {\r\n  const { loggedInUser, editSuccess, changeCurrentUser } = useGlobalState();\r\n  const [userSecret, setUserSecret] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [err, setErr] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const getSecret = async () => {\r\n    const res = await fetch(\"/api/2fa/activate\");\r\n    const data = await res.json();\r\n    if (data.status === \"success\") {\r\n      setUserSecret(data.tempSecret);\r\n    }\r\n  };\r\n\r\n  const verifySecret = async () => {\r\n    setErr(\"\");\r\n    const submission = await fetch(\"/api/2fa/verify\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        secret: userSecret,\r\n        userId: loggedInUser.user.id,\r\n        token: pin,\r\n      }),\r\n    });\r\n    const res = await submission.json();\r\n    if (res.verified) {\r\n      editSuccess(\"2FA activated successfully!\");\r\n      localStorage.setItem(\"didAuth\", \"true\");\r\n      localStorage.setItem(\"authed\", userSecret);\r\n      changeCurrentUser({\r\n        ...loggedInUser,\r\n        user: {\r\n          ...loggedInUser.user,\r\n          secret: userSecret,\r\n        },\r\n      });\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      setErr(\"PIN is not correct! Try again.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSecret();\r\n  }, []);\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h3 className=\"text-center\">2FA Activation</h3>\r\n        {err ? (\r\n          <div\r\n            className=\"alert alert-danger alert-dismissible fade show w-50 m-auto\"\r\n            role=\"alert\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {err}\r\n          </div>\r\n        ) : null}\r\n        <p className=\"text-center\">\r\n          1- Please add the below secret key as a new user in your\r\n          authenticator!\r\n        </p>\r\n        <p className=\"text-center\" style={{ color: \"red\", lineHeight: \"0px\" }}>\r\n          Make sure to keep the key private and safe\r\n        </p>\r\n        <p className=\"text-center\" style={{ fontSize: 20 }}>\r\n          {userSecret}\r\n        </p>\r\n        <p className=\"text-center\">\r\n          2- Input the PIN from your authenticator after adding the above secret\r\n          key\r\n        </p>\r\n        <div className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"PIN\"\r\n            className=\"form-control w-25 m-auto text-center\"\r\n            required\r\n            onChange={(e) => setPin(e.target.value)}\r\n            min={0}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-outline-primary\" onClick={verifySecret}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TwoFactor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../context/GlobalContext\";\r\nimport jwt from \"jsonwebtoken\";\r\nconst Validation = () => {\r\n  const { loggedInUser, changeCurrentUser } = useGlobalState();\r\n  const [pin, setPin] = useState();\r\n  const [err, setErr] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loggedInUser.user) {\r\n      console.log(\"exist\");\r\n    } else {\r\n      const token = localStorage.getItem(\"myToken\");\r\n      const authed = localStorage.getItem(\"authed\");\r\n      if (token) {\r\n        let decoded = jwt.decode(token, { complete: true });\r\n        changeCurrentUser({\r\n          user: {\r\n            id: decoded.payload.id,\r\n            email: decoded.payload.email,\r\n            secret: authed,\r\n          },\r\n          status: \"success\",\r\n          two_fa_Validated: authed ? true : false,\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  async function validateUser() {\r\n    setErr(\"\");\r\n    const submission = await fetch(\"/api/2fa/validate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ secret: loggedInUser.user.secret, token: pin }),\r\n    });\r\n    const res = await submission.json();\r\n    if (res.verified) {\r\n      localStorage.setItem(\"authed\", loggedInUser.user.secret);\r\n      localStorage.setItem(\"didAuth\", \"true\");\r\n      changeCurrentUser({\r\n        ...loggedInUser,\r\n        two_fa_Validated: true,\r\n      });\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      setErr(\"PIN is incorrect!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h3 className=\"text-center\">2FA Activation</h3>\r\n        {err ? (\r\n          <div\r\n            className=\"alert alert-danger alert-dismissible fade show w-50 m-auto\"\r\n            role=\"alert\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {err}\r\n          </div>\r\n        ) : null}\r\n        <p className=\"text-center\">Input the PIN from your authenticator</p>\r\n        <div className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"PIN\"\r\n            className=\"form-control w-25 m-auto text-center\"\r\n            required\r\n            onChange={(e) => setPin(e.target.value)}\r\n            min={0}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className=\"text-center\">\r\n          <button className=\"btn btn-outline-primary\" onClick={validateUser}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Validation;\r\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport Login from \"./components/login\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\nimport { ContextProvider } from \"./context/GlobalContext\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport AuthedRoute from \"./components/AuthedRoute\";\nimport TwoFactor from \"./components/twoFactor\";\nimport Validation from \"./components/validation\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <ContextProvider>\n        <Router>\n          <Switch>\n            <AuthedRoute exact path=\"/\" component={Login} />\n            <AuthedRoute path=\"/register\" component={Register} />\n            <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n            <ProtectedRoute path=\"/dashboard/2fa\" component={TwoFactor} />\n            <ProtectedRoute path=\"/user/validate\" component={Validation} />\n          </Switch>\n        </Router>\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}